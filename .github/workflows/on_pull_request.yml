name: canary CI/CD

#on:
#  push:
#    branches:
#      - main

#jobs:
#  terraform:
#    runs-on: ubuntu-latest

#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v3

#    - name: Login to Azure
#      run: az login --service-principal --tenant ${{ secrets.AZURE_TENANT_ID }} -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}

#    - name: Set up Terraform
#      uses: hashicorp/setup-terraform@v1

#    - name: Setup Python
#      uses: actions/setup-python@v3
#      with:
#        python-version: latest

#    - name: Install Azure CLI
#      run: pip install azure-cli

#    - name: Terraform Init
#      run: terraform init

#    - name: Terraform Validate
#      run: terraform validate

#    - name: Terraform Plan
#      run: terraform plan 

#    - name: Terraform Apply
#      if: github.event == 'push'
#      run: terraform apply 

#      name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/voting-app:${{ github.sha }} .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/voting-app:${{ github.sha }}

  deploy_staging:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to Staging
      run: kubectl apply -f kubernetes/staging-deployment.yaml

  deploy_canary:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy Canary
      run: kubectl apply -f kubernetes/canary-deployment.yaml

  deploy_production:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to Production
      run: kubectl apply -f kubernetes/production-deployment.yaml
